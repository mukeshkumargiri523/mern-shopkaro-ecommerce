{"version":3,"file":"static/js/20.149ff4de.chunk.js","mappings":"0NAOA,MA6GA,EA7G2BA,KACzB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,IACrCO,GAAWC,EAAAA,EAAAA,MAwCjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,kBAAiBC,UAC7BH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,MAAA,QAAMC,SAtBUC,UACpBC,EAAEC,iBACF,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,KAAK,sCAAuC,CACvEvB,QACAG,cACAI,cAEEc,EAAKG,SACPC,EAAAA,GAAMD,QAAQ,+BACdf,EAAS,WAETgB,EAAAA,GAAMC,MAAM,uBAEhB,CAAE,MAAOC,GACPC,QAAQC,IAAIF,GACZF,EAAAA,GAAMC,MAAM,uBACd,GAKkCZ,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,MAAII,UAAU,QAAOD,SAAC,2BAEtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,QAAOhB,SAAC,WACvBH,EAAAA,EAAAA,KAAA,SACEoB,KAAK,QACLhB,UAAU,eACViB,GAAG,QACHC,MAAOjC,EACPkC,SAAWf,GAAMlB,EAASkB,EAAEgB,OAAOF,OACnCG,YAAY,mBACZC,UAAQ,QAGZ1B,EAAAA,EAAAA,KAAA,UAAQ2B,QAxDSpB,UACvBC,EAAEC,iBACF,IACEd,GAAa,GACb,MAAM,KAAEe,SAAeC,EAAAA,EAAMC,KAAK,gCAAiC,CACjEvB,QACAK,cAEEgB,EAAKG,QACPC,EAAAA,GAAMD,QAAQ,yBAEdC,EAAAA,GAAMC,MAAM,iBAEhB,CAAE,MAAOC,GACPC,QAAQC,IAAIF,GACZF,EAAAA,GAAMC,MAAM,uBACd,GAwCyCX,UAAU,kBAAiBD,SAAC,cAG/DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,MAAKhB,SAAC,eACrBH,EAAAA,EAAAA,KAAA,SACEoB,KAAK,SACLhB,UAAU,eACViB,GAAG,MACHC,MAAO1B,EACP2B,SAAWf,GAAMX,EAAaW,EAAEgB,OAAOF,OACvCG,YAAY,0BACZC,UAAQ,QAGZrB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOmB,QAAQ,WAAUhB,SAAC,kBAC1BH,EAAAA,EAAAA,KAAA,SACEoB,KAAK,WACLhB,UAAU,eACViB,GAAG,WACHC,MAAO9B,EACP+B,SAAWf,GAAMf,EAAee,EAAEgB,OAAOF,OACzCG,YAAY,WACZC,UAAQ,QAGZ1B,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CACHC,MAAO,CACLC,WAAY,MACZC,MAAO,WACPC,WAAY,UAEdC,GAAI,SAAS9B,SACd,kBAGDH,EAAAA,EAAAA,KAAA,UAAQoB,KAAK,SAAShB,UAAU,OAAMD,SAAC,gBAKpC,C","sources":["pages/authPages/ResetPasswordByOtp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/AuthStyle.css\";\r\nimport Layout from \"../../components/layout/Layout\";\r\n\r\nconst ResetPasswordByOtp = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [toSendOtp, setToSendOtp] = useState(false);\r\n  const [otpByUser, setOtpByUser] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const sendingOtpToMail = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setToSendOtp(true);\r\n      const { data } = await axios.post(`/api/v1/auth/send-otp-to-user`, {\r\n        email,\r\n        toSendOtp,\r\n      });\r\n      if (data.success) {\r\n        toast.success(\"Otp sent successfully\");\r\n      } else {\r\n        toast.error(\"otp don't sent\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await axios.post(`/api/v1/auth/forgot-password-by-otp`, {\r\n        email,\r\n        newPassword,\r\n        otpByUser,\r\n      });\r\n      if (data.success) {\r\n        toast.success(\"Reset password successfully\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        toast.error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <Layout title=\"Forgot Password\">\r\n      <div className=\"register\">\r\n        <form onSubmit={resetPassword}>\r\n          <h2 className=\"title\">RESET PASSWORD BY OTP</h2>\r\n\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter Your Email\"\r\n              required\r\n            />\r\n          </div>\r\n          <button onClick={sendingOtpToMail} className=\"btn btn-success\">\r\n            SEND OTP\r\n          </button>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"otp\">Enter Otp</label>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              id=\"otp\"\r\n              value={otpByUser}\r\n              onChange={(e) => setOtpByUser(e.target.value)}\r\n              placeholder=\"Enter Your Otp recieved\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"password\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </div>\r\n          <Link\r\n            style={{\r\n              fontWeight: \"500\",\r\n              color: \"darkblue\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n            to={\"/login\"}\r\n          >\r\n            Go To SignIn\r\n          </Link>\r\n          <button type=\"submit\" className=\"butn\">\r\n            RESET\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordByOtp;\r\n"],"names":["ResetPasswordByOtp","email","setEmail","useState","newPassword","setNewPassword","toSendOtp","setToSendOtp","otpByUser","setOtpByUser","navigate","useNavigate","_jsx","Layout","title","children","className","_jsxs","onSubmit","async","e","preventDefault","data","axios","post","success","toast","error","err","console","log","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","Link","style","fontWeight","color","whiteSpace","to"],"sourceRoot":""}