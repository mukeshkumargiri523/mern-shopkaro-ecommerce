{"version":3,"file":"static/js/888.e6b4b645.chunk.js","mappings":"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","sources":["components/CardSkeleton.jsx","pages/CategoryPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nfunction CardSkeleton({ cards }) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div className=\"homeProduct d-flex justify-content-center gap-2 flex-wrap mx-2\">\r\n          {Array(cards)\r\n            .fill(0)\r\n            ?.map((item, i) => (\r\n              <div\r\n                className=\"card\"\r\n                key={i}\r\n                style={{\r\n                  width: \"20rem\",\r\n                  margin: \"0 10px 12px 10px\",\r\n                  height: \"500px\",\r\n                }}\r\n              >\r\n                <Skeleton style={{ height: \"230px\", marginBottom: \"4px\" }} />\r\n\r\n                <div className=\"card-body bg-info-subtle\">\r\n                  <Skeleton style={{ width: \"80%\", marginBottom: \"4px\" }} />\r\n\r\n                  <Skeleton\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"90px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  />\r\n\r\n                  <Skeleton\r\n                    style={{\r\n                      width: \"20%\",\r\n                      marginTop: \"4px\",\r\n                    }}\r\n                  />\r\n\r\n                  {/* <div className=\"d-flex gap-1 mt-2\"> */}\r\n                  <Skeleton\r\n                    style={{\r\n                      width: \"40%\",\r\n                      height: \"40px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  />\r\n                  <Skeleton\r\n                    style={{\r\n                      width: \"40%\",\r\n                      height: \"40px\",\r\n                      marginBottom: \"4px\",\r\n                    }}\r\n                  />\r\n                  {/* </div> */}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSkeleton;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport CardSkeleton from \"../components/CardSkeleton\";\r\nimport useCartContext from \"../context/cartContext\";\r\nimport toast from \"react-hot-toast\";\r\nimport useAuthContext from \"../context/authContext\";\r\n\r\nfunction CategoryPage() {\r\n  const [products, setProducts] = useState([]);\r\n  const [category, setCategory] = useState({});\r\n  const { cart, setCart } = useCartContext();\r\n  const { auth, setAuth } = useAuthContext();\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const getProductByCat = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data } = await axios.get(\r\n        `/api/v1/product/product-by-category/${params.slug}`\r\n      );\r\n\r\n      setProducts(data?.products);\r\n      setCategory(data?.category);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setLoading(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (params?.slug) getProductByCat();\r\n  }, [params]);\r\n\r\n  return (\r\n    <Layout clName={\"bg-danger-subtle\"} title={\"Categories\"}>\r\n      <div className=\"container mb-3 mt-4\">\r\n        <h3\r\n          className=\"text-center\"\r\n          style={{ textTransform: \"capitalize\", textDecoration: \"underline\" }}\r\n        >\r\n          Category - {category?.name}\r\n        </h3>\r\n        <h4 className=\"text-center\">\r\n          Product {products?.length} results found\r\n        </h4>\r\n        <div className=\"row\">\r\n          {!loading ? (\r\n            <div className=\"categoryProduct d-flex gap-2 justify-content-center flex-wrap\">\r\n              {products.length < 1 ? (\r\n                <h3>No Products Available</h3>\r\n              ) : (\r\n                <>\r\n                  {products?.map((prod) => (\r\n                    <div\r\n                      className=\"card\"\r\n                      key={prod._id}\r\n                      style={{\r\n                        width: \"19rem\",\r\n                        margin: \"12px 16px\",\r\n                        height: \"500px\",\r\n                      }}\r\n                    >\r\n                      <Link\r\n                        to={`/product/${prod.slug}`}\r\n                        style={{ textDecoration: \"none\" }}\r\n                        className=\"product_link\"\r\n                      >\r\n                        {prod && (\r\n                          <img\r\n                            src={`/api/v1/product/product-photo/${prod._id}`}\r\n                            className=\"card-img-top\"\r\n                            style={{ height: \"230px\" }}\r\n                            alt=\"product_image\"\r\n                          />\r\n                        )}\r\n                      </Link>\r\n                      <div className=\"card-body bg-warning-subtle\">\r\n                        <Link\r\n                          key={prod._id}\r\n                          to={`/product/${prod.slug}`}\r\n                          style={{ textDecoration: \"none\", color: \"black\" }}\r\n                          className=\"product_link\"\r\n                        >\r\n                          <h5\r\n                            className=\"card-title\"\r\n                            style={{ height: \"70px\", marginTop: \"-10px\" }}\r\n                          >\r\n                            {prod.name}\r\n                          </h5>\r\n                          <p\r\n                            className=\"card-text\"\r\n                            style={{\r\n                              overflow: \"hidden\",\r\n                              height: \"100px\",\r\n                              marginTop: \"-10px\",\r\n                            }}\r\n                          >\r\n                            {prod?.description.substring(0, 120)}...\r\n                          </p>\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <p\r\n                              className=\"card-text fs-5\"\r\n                              style={{ fontWeight: \"500\", marginTop: \"-10px\" }}\r\n                            >\r\n                              $ {prod?.price}\r\n                            </p>\r\n                            {(prod.category.name === \"air conditioner\" ||\r\n                              prod.category.name === \"tshirt\" ||\r\n                              prod.category.name === \"home decoration\") && (\r\n                              <div\r\n                                style={{\r\n                                  color: \"white\",\r\n                                  padding: \"0 10px 0 10px\",\r\n                                  margin: \"-20px 0 10px 0\",\r\n                                  background:\r\n                                    \"linear-gradient(to right, #c21500, #ffc500)\",\r\n                                }}\r\n                              >\r\n                                SALE IS LIVE\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </Link>\r\n                        <div className=\"d-flex\" style={{ marginTop: \"-5px\" }}>\r\n                          <button\r\n                            className=\"btn btn-primary ms-2\"\r\n                            onClick={() => navigate(`/product/${prod.slug}`)}\r\n                          >\r\n                            More Detail\r\n                          </button>\r\n                          <button\r\n                            className=\"btn ms-2 cartBtn\"\r\n                            style={{\r\n                              background: \"orangered\",\r\n                              color: \"white\",\r\n                            }}\r\n                            onClick={() => {\r\n                              if (\r\n                                cart.findIndex(\r\n                                  (item) => item._id === prod._id\r\n                                ) < 0\r\n                              ) {\r\n                                setCart([\r\n                                  ...cart,\r\n                                  { ...prod, userId: auth?.user.email },\r\n                                ]);\r\n                                localStorage.setItem(\r\n                                  \"cart\",\r\n                                  JSON.stringify([\r\n                                    ...cart,\r\n                                    { ...prod, userId: auth?.user.email },\r\n                                  ])\r\n                                );\r\n                                toast.success(\"Items added to cart\");\r\n                              } else {\r\n                                toast.error(\"Item Already Added\");\r\n                              }\r\n                            }}\r\n                          >\r\n                            {cart.find((item) => item._id === prod._id)\r\n                              ? \"Go To Cart\"\r\n                              : \"Add To Cart\"}\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <CardSkeleton cards={8} />\r\n              {/* <Loader /> */}\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default CategoryPage;\r\n"],"names":["_ref","_Array$fill","cards","_jsx","children","className","Array","fill","map","item","i","_jsxs","style","width","margin","height","Skeleton","marginBottom","marginTop","products","setProducts","useState","category","setCategory","cart","setCart","useCartContext","auth","setAuth","useAuthContext","params","useParams","navigate","useNavigate","loading","setLoading","useEffect","slug","async","data","axios","get","concat","err","console","log","getProductByCat","Layout","clName","title","textTransform","textDecoration","name","length","_Fragment","CardSkeleton","prod","Link","to","src","_id","alt","color","overflow","description","substring","fontWeight","price","padding","background","onClick","findIndex","userId","user","email","localStorage","setItem","JSON","stringify","toast","success","error","find"],"sourceRoot":""}