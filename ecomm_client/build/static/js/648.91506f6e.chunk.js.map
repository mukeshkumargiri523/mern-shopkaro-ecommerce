{"version":3,"file":"static/js/648.91506f6e.chunk.js","mappings":"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","sources":["pages/authPages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\n// import { toast } from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/AuthStyle.css\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nconst options = [\r\n  \"Enter your favourite sports\",\r\n  \"Enter your favourite dish\",\r\n  \"Enter your favourite actor\",\r\n];\r\n\r\nconst RegisterPage = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [photo, setPhoto] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (password === confirmPassword) {\r\n        // const res = await axios.post(`/api/v1/auth/register`, {\r\n        //   name,\r\n        //   email,\r\n        //   password,\r\n        //   address,\r\n        //   phone,\r\n        //   answer,\r\n        //   question,\r\n        // });\r\n        // if (res && res.data.success) {\r\n        //   toast.success(res.data.message);\r\n        //   //  alert(\"register successfully\");\r\n        //   navigate(\"/login\");\r\n        // } else {\r\n        //   toast.error(res.data.message);\r\n        // }\r\n\r\n        const userData = new FormData();\r\n        userData.append(\"name\", name);\r\n        userData.append(\"email\", email);\r\n        userData.append(\"password\", password);\r\n        userData.append(\"photo\", photo);\r\n        userData.append(\"address\", address);\r\n        userData.append(\"phone\", phone);\r\n        userData.append(\"answer\", answer);\r\n        userData.append(\"question\", question);\r\n        const res = await axios.post(`/api/v1/auth/register`, userData);\r\n        if (res && res.data.success) {\r\n          toast.success(res.data.message);\r\n          navigate(\"/login\");\r\n        } else {\r\n          toast.error(res.data.message);\r\n        }\r\n      } else {\r\n        toast.error(\"Password doesn't match\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title={\"Register Now\"}>\r\n      <div className=\"register\">\r\n        <form className=\" bg-opacity-25\" onSubmit={handleRegister}>\r\n          <h2>REGISTRATION FORM</h2>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Enter Your Name\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter Your Email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              type=\"tel\"\r\n              className=\"form-control\"\r\n              id=\"phone\"\r\n              value={phone}\r\n              onChange={(e) => setPhone(e.target.value)}\r\n              placeholder=\"Enter Your Phone no\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"address\">Address</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              placeholder=\"Enter Your Address\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"confirmpassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              placeholder=\"Confirm Password\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label>Question</label>\r\n            <select\r\n              className=\"form-select\"\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            >\r\n              <option>Please choose one Question</option>\r\n              {options.map((option, index) => {\r\n                return <option key={index}>{option}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"answer\">Answer</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"answer\"\r\n              value={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n              placeholder=\"Enter Answer\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            <label htmlFor=\"uploadImg\" className=\"admBtn\">\r\n              {photo ? `Upload ${photo.name}` : \"Upload Profile Photo\"}\r\n              <input\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => setPhoto(e.target.files[0])}\r\n                id=\"uploadImg\"\r\n                hidden\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"mb-2\">\r\n            {photo && (\r\n              <div className=\"text-center\">\r\n                <img\r\n                  src={URL.createObjectURL(photo)}\r\n                  alt=\"product_photo\"\r\n                  height={\"200px\"}\r\n                  className=\"img img-resposive\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div style={{ alignSelf: \"flex-start\" }}>\r\n            <span>\r\n              Already Registered{\" \"}\r\n              <Link\r\n                style={{\r\n                  fontWeight: \"500\",\r\n                  color: \"darkblue\",\r\n                  whiteSpace: \"nowrap\",\r\n                }}\r\n                to={\"/login\"}\r\n              >\r\n                Go To Login\r\n              </Link>\r\n            </span>\r\n\r\n            <Link\r\n              style={{\r\n                fontWeight: \"500\",\r\n                color: \"red\",\r\n                marginLeft: \"1rem\",\r\n              }}\r\n              to={\"/forgot-password\"}\r\n            >\r\n              Forgot password\r\n            </Link>\r\n          </div>\r\n          <button type=\"submit\" className=\"butn\">\r\n            REGISTER\r\n          </button>\r\n          <div></div>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"names":["options","RegisterPage","name","setName","useState","email","setEmail","password","setPassword","phone","setPhone","address","setAddress","answer","setAnswer","photo","setPhoto","question","setQuestion","confirmPassword","setConfirmPassword","navigate","useNavigate","_jsx","Layout","title","children","className","_jsxs","onSubmit","async","e","preventDefault","userData","FormData","append","res","axios","post","data","success","toast","message","error","err","console","log","htmlFor","type","id","value","onChange","target","placeholder","required","map","option","index","concat","accept","files","hidden","src","URL","createObjectURL","alt","height","style","alignSelf","Link","fontWeight","color","whiteSpace","to","marginLeft"],"sourceRoot":""}