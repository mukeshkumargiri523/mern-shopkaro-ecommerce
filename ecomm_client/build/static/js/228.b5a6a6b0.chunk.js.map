{"version":3,"file":"static/js/228.b5a6a6b0.chunk.js","mappings":"2NAMA,MAAMA,EAAU,CACd,8BACA,4BACA,8BAuGF,EArG2BC,KACzB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,IAE/BO,GAAWC,EAAAA,EAAAA,MAsBjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,MAAM,kBAAiBC,UAC7BH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUD,UACvBE,EAAAA,EAAAA,MAAA,QAAMC,SAvBSC,UACnBC,EAAEC,iBACF,IACE,MAAMC,QAAYC,EAAAA,EAAMC,KAAK,+BAAgC,CAC3DvB,QACAG,cACAI,SACAF,aAEEgB,GAAOA,EAAIG,KAAKC,SAClBC,EAAAA,GAAMD,QAAQJ,EAAIG,KAAKG,SACvBlB,EAAS,WAETiB,EAAAA,GAAME,MAAMP,EAAIG,KAAKG,QAEzB,CAAE,MAAOE,GACPC,QAAQC,IAAIF,GACZH,EAAAA,GAAME,MAAM,uBACd,GAKiCd,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,MAAII,UAAU,QAAOD,SAAC,oBAEtBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,QAAOlB,SAAC,WACvBH,EAAAA,EAAAA,KAAA,SACEsB,KAAK,QACLlB,UAAU,eACVmB,GAAG,QACHC,MAAOnC,EACPoC,SAAWjB,GAAMlB,EAASkB,EAAEkB,OAAOF,OACnCG,YAAY,mBACZC,UAAQ,QAGZvB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,cACPE,EAAAA,EAAAA,MAAA,UACED,UAAU,cACVqB,SAAWjB,GAAMb,EAAYa,EAAEkB,OAAOF,OAAOrB,SAAA,EAE7CH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,+BACPhB,EAAQ0C,KAAI,CAACC,EAAQC,KACb/B,EAAAA,EAAAA,KAAA,UAAAG,SAAqB2B,GAARC,YAI1B1B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,SAAQlB,SAAC,YACxBH,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLlB,UAAU,eACVmB,GAAG,SACHC,MAAO5B,EACP6B,SAAWjB,GAAMX,EAAUW,EAAEkB,OAAOF,OACpCG,YAAY,oBACZC,UAAQ,QAGZvB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,kBAAiBD,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,SAAOqB,QAAQ,WAAUlB,SAAC,kBAC1BH,EAAAA,EAAAA,KAAA,SACEsB,KAAK,WACLlB,UAAU,eACVmB,GAAG,WACHC,MAAOhC,EACPiC,SAAWjB,GAAMf,EAAee,EAAEkB,OAAOF,OACzCG,YAAY,WACZC,UAAQ,QAGZ5B,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CACHC,MAAO,CACLC,WAAY,MACZC,MAAO,WACPC,WAAY,UAEdC,GAAI,SAASlC,SACd,kBAGDH,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAASlB,UAAU,OAAMD,SAAC,gBAKpC,C","sources":["pages/authPages/ForgotPasswordPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/AuthStyle.css\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nconst options = [\r\n  \"Enter your favourite sports\",\r\n  \"Enter your favourite dish\",\r\n  \"Enter your favourite actor\",\r\n];\r\nconst ForgotPasswordPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleForgot = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`/api/v1/auth/forgot-password`, {\r\n        email,\r\n        newPassword,\r\n        answer,\r\n        question,\r\n      });\r\n      if (res && res.data.success) {\r\n        toast.success(res.data.message);\r\n        navigate(\"/login\");\r\n      } else {\r\n        toast.error(res.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <Layout title=\"Forgot Password\">\r\n      <div className=\"register\">\r\n        <form onSubmit={handleForgot}>\r\n          <h2 className=\"title\">RESET PASSWORD</h2>\r\n\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter Your Email\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label>Question</label>\r\n            <select\r\n              className=\"form-select\"\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n            >\r\n              <option>Please choose one Question</option>\r\n              {options.map((option, index) => {\r\n                return <option key={index}>{option}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"answer\">Answer</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"answer\"\r\n              value={answer}\r\n              onChange={(e) => setAnswer(e.target.value)}\r\n              placeholder=\"Enter Your Answer\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"password\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              value={newPassword}\r\n              onChange={(e) => setNewPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n          </div>\r\n          <Link\r\n            style={{\r\n              fontWeight: \"500\",\r\n              color: \"darkblue\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n            to={\"/login\"}\r\n          >\r\n            Go To SignIn\r\n          </Link>\r\n          <button type=\"submit\" className=\"butn\">\r\n            RESET\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n"],"names":["options","ForgotPasswordPage","email","setEmail","useState","newPassword","setNewPassword","question","setQuestion","answer","setAnswer","navigate","useNavigate","_jsx","Layout","title","children","className","_jsxs","onSubmit","async","e","preventDefault","res","axios","post","data","success","toast","message","error","err","console","log","htmlFor","type","id","value","onChange","target","placeholder","required","map","option","index","Link","style","fontWeight","color","whiteSpace","to"],"sourceRoot":""}